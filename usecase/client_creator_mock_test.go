// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package usecase

import (
	"cloud.google.com/go/storage"
	"context"
	"sync"
)

// Ensure, that ClientCreatorMock does implement ClientCreator.
// If this is not the case, regenerate this file with moq.
var _ ClientCreator = &ClientCreatorMock{}

// ClientCreatorMock is a mock implementation of ClientCreator.
//
//	func TestSomethingThatUsesClientCreator(t *testing.T) {
//
//		// make and configure a mocked ClientCreator
//		mockedClientCreator := &ClientCreatorMock{
//			NewClientFunc: func(ctx context.Context) (*storage.Client, error) {
//				panic("mock out the NewClient method")
//			},
//		}
//
//		// use mockedClientCreator in code that requires ClientCreator
//		// and then make assertions.
//
//	}
type ClientCreatorMock struct {
	// NewClientFunc mocks the NewClient method.
	NewClientFunc func(ctx context.Context) (*storage.Client, error)

	// calls tracks calls to the methods.
	calls struct {
		// NewClient holds details about calls to the NewClient method.
		NewClient []struct {
			// Ctx is the ctx argument value.
			Ctx context.Context
		}
	}
	lockNewClient sync.RWMutex
}

// NewClient calls NewClientFunc.
func (mock *ClientCreatorMock) NewClient(ctx context.Context) (*storage.Client, error) {
	if mock.NewClientFunc == nil {
		panic("ClientCreatorMock.NewClientFunc: method is nil but ClientCreator.NewClient was just called")
	}
	callInfo := struct {
		Ctx context.Context
	}{
		Ctx: ctx,
	}
	mock.lockNewClient.Lock()
	mock.calls.NewClient = append(mock.calls.NewClient, callInfo)
	mock.lockNewClient.Unlock()
	return mock.NewClientFunc(ctx)
}

// NewClientCalls gets all the calls that were made to NewClient.
// Check the length with:
//
//	len(mockedClientCreator.NewClientCalls())
func (mock *ClientCreatorMock) NewClientCalls() []struct {
	Ctx context.Context
} {
	var calls []struct {
		Ctx context.Context
	}
	mock.lockNewClient.RLock()
	calls = mock.calls.NewClient
	mock.lockNewClient.RUnlock()
	return calls
}
